name: Deploy Dashboard App
on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-west-2
  ECR_REPO_BACKEND: dashboard-backend
  CLUSTER: dashboard-cluster
  SERVICE: dashboard-service
  TASK_FAMILY: dashboard-task

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & push backend
        run: |
          docker build -t $ECR_REPO_BACKEND -f backend/Dockerfile .
          docker tag $ECR_REPO_BACKEND:latest ${{ steps.ecr.outputs.registry }}/$ECR_REPO_BACKEND:latest
          docker push ${{ steps.ecr.outputs.registry }}/$ECR_REPO_BACKEND:latest

      # If you build a custom nginx (basic-auth) image, push it here too

      - name: Render task definition with new image
        id: taskdef
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: infrastructure/ecs-task-def.json
          container-name: backend
          image: ${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPO_BACKEND }}:latest

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.taskdef.outputs.task-definition }}
          service: ${{ env.SERVICE }}
          cluster: ${{ env.CLUSTER }}
          wait-for-service-stability: true
